<?xml version="1.0"?>
<doc>
<assembly>
<name>
WebTaskVB
</name>
</assembly>
<members>
<member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.#ctor">
	<remarks/>
</member><member name="E:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getEntitiesAsStringCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getEntitiesUsingSchemaAsStringCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.BizagiWebReference02.EntityManagerSOA.saveEntityAsStringCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getEntitySchemaStrCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.BizagiWebReference02.EntityManagerSOA.cleanTestDataCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getCaseLogCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getEntityFormLogCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getEntityLogCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getEntitiesCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getCaseDataUsingSchemaLiteCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getCaseDataUsingSchemaLiteAsStringCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getCaseDataUsingSchemaCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getCaseDataUsingSchemaAsStringCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getCaseDataUsingXPathsCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getCaseDataUsingXPathsAsStringCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getEntitiesUsingSchemaCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getEntitySchemaCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.BizagiWebReference02.EntityManagerSOA.replicateEntityCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.BizagiWebReference02.EntityManagerSOA.replicateAllCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.BizagiWebReference02.EntityManagerSOA.saveEntityCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.BizagiWebReference02.EntityManagerSOA.saveEntityWithKeyCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.BizagiWebReference02.EntityManagerSOA.saveEntityWithKeyAsStringCompleted">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getEntitiesAsString(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getEntitiesAsStringAsync(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getEntitiesAsStringAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getEntitiesUsingSchemaAsString(System.String,System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getEntitiesUsingSchemaAsStringAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getEntitiesUsingSchemaAsStringAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.saveEntityAsString(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.saveEntityAsStringAsync(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.saveEntityAsStringAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getEntitySchemaStr(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getEntitySchemaStrAsync(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getEntitySchemaStrAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.cleanTestData(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.cleanTestDataAsync(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.cleanTestDataAsync(System.Xml.XmlNode,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getCaseLog(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getCaseLogAsync(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getCaseLogAsync(System.Xml.XmlNode,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getEntityFormLog(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getEntityFormLogAsync(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getEntityFormLogAsync(System.Xml.XmlNode,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getEntityLog(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getEntityLogAsync(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getEntityLogAsync(System.Xml.XmlNode,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getEntities(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getEntitiesAsync(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getEntitiesAsync(System.Xml.XmlNode,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getCaseDataUsingSchemaLite(System.Int32,System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getCaseDataUsingSchemaLiteAsync(System.Int32,System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getCaseDataUsingSchemaLiteAsync(System.Int32,System.Xml.XmlNode,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getCaseDataUsingSchemaLiteAsString(System.Int32,System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getCaseDataUsingSchemaLiteAsStringAsync(System.Int32,System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getCaseDataUsingSchemaLiteAsStringAsync(System.Int32,System.String,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getCaseDataUsingSchema(System.String,System.String,System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getCaseDataUsingSchemaAsync(System.String,System.String,System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getCaseDataUsingSchemaAsync(System.String,System.String,System.Xml.XmlNode,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getCaseDataUsingSchemaAsString(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getCaseDataUsingSchemaAsStringAsync(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getCaseDataUsingSchemaAsStringAsync(System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getCaseDataUsingXPaths(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getCaseDataUsingXPathsAsync(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getCaseDataUsingXPathsAsync(System.Xml.XmlNode,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getCaseDataUsingXPathsAsString(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getCaseDataUsingXPathsAsStringAsync(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getCaseDataUsingXPathsAsStringAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getEntitiesUsingSchema(System.Xml.XmlNode,System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getEntitiesUsingSchemaAsync(System.Xml.XmlNode,System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getEntitiesUsingSchemaAsync(System.Xml.XmlNode,System.Xml.XmlNode,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getEntitySchema(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getEntitySchemaAsync(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.getEntitySchemaAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.replicateEntity(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.replicateEntityAsync(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.replicateEntityAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.replicateAll">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.replicateAllAsync">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.replicateAllAsync(System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.saveEntity(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.saveEntityAsync(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.saveEntityAsync(System.Xml.XmlNode,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.saveEntityWithKey(System.Object,System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.saveEntityWithKeyAsync(System.Object,System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.saveEntityWithKeyAsync(System.Object,System.Xml.XmlNode,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.saveEntityWithKeyAsString(System.Object,System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.saveEntityWithKeyAsStringAsync(System.Object,System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.saveEntityWithKeyAsStringAsync(System.Object,System.String,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.BizagiWebReference02.EntityManagerSOA.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.EntityManagerSOA">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.getEntitiesAsStringCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.BizagiWebReference02.getEntitiesAsStringCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.getEntitiesAsStringCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.getEntitiesUsingSchemaAsStringCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.BizagiWebReference02.getEntitiesUsingSchemaAsStringCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.getEntitiesUsingSchemaAsStringCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.saveEntityAsStringCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.BizagiWebReference02.saveEntityAsStringCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.saveEntityAsStringCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.getEntitySchemaStrCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.BizagiWebReference02.getEntitySchemaStrCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.getEntitySchemaStrCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.cleanTestDataCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.BizagiWebReference02.cleanTestDataCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.cleanTestDataCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.getCaseLogCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.BizagiWebReference02.getCaseLogCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.getCaseLogCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.getEntityFormLogCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.BizagiWebReference02.getEntityFormLogCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.getEntityFormLogCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.getEntityLogCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.BizagiWebReference02.getEntityLogCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.getEntityLogCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.getEntitiesCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.BizagiWebReference02.getEntitiesCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.getEntitiesCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.getCaseDataUsingSchemaLiteCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.BizagiWebReference02.getCaseDataUsingSchemaLiteCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.getCaseDataUsingSchemaLiteCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.getCaseDataUsingSchemaLiteAsStringCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.BizagiWebReference02.getCaseDataUsingSchemaLiteAsStringCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.getCaseDataUsingSchemaLiteAsStringCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.getCaseDataUsingSchemaCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.BizagiWebReference02.getCaseDataUsingSchemaCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.getCaseDataUsingSchemaCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.getCaseDataUsingSchemaAsStringCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.BizagiWebReference02.getCaseDataUsingSchemaAsStringCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.getCaseDataUsingSchemaAsStringCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.getCaseDataUsingXPathsCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.BizagiWebReference02.getCaseDataUsingXPathsCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.getCaseDataUsingXPathsCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.getCaseDataUsingXPathsAsStringCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.BizagiWebReference02.getCaseDataUsingXPathsAsStringCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.getCaseDataUsingXPathsAsStringCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.getEntitiesUsingSchemaCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.BizagiWebReference02.getEntitiesUsingSchemaCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.getEntitiesUsingSchemaCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.getEntitySchemaCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.BizagiWebReference02.getEntitySchemaCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.getEntitySchemaCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.replicateEntityCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.BizagiWebReference02.replicateEntityCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.replicateEntityCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.replicateAllCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.BizagiWebReference02.replicateAllCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.replicateAllCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.saveEntityCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.BizagiWebReference02.saveEntityCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.saveEntityCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.saveEntityWithKeyCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.BizagiWebReference02.saveEntityWithKeyCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.saveEntityWithKeyCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.saveEntityWithKeyAsStringCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.BizagiWebReference02.saveEntityWithKeyAsStringCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.BizagiWebReference02.saveEntityWithKeyAsStringCompletedEventArgs">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.#ctor">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.pingCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.createCasesAsStringCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.performActivityAsStringCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.setEventAsStringCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.getCasesAsStringCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.saveActivityAsStringCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.getActivitiesAsStringCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.suspendCasesAsStringCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.resumeCasesAsStringCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.getClosedActivitiesAsStringCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.getEventsAsStringCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.getWorkflowClassesAsStringCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.getCategoriesAsStringCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.abortCasesAsStringCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.getAssignationLogAsStringCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.CheckPasswordCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.assignActivityAsStringCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.grantCaseAccessCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.revokeCaseAccessCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.cleanTestDataCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.createCasesCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.evalRuleCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.getActivitiesCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.getAssignationLogCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.getClosedActivitiesCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.performActivityCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.resumeCasesCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.rollbackCaseCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.setEventCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.suspendCasesCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.abortCasesCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.getApplicationsCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.getCategoriesCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.getCategories2Completed">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.getCategoriesFromApplicationNameCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.getWorkflowClassesFromCategoryNameCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.getCategoriesLocalizedCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.getWorkflowClassesCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.getWorkflowClasses2Completed">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.getEventsCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.getCasesCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.saveActivityCompleted">
	<remarks/>
</member><member name="E:WebTaskVB.InsertService.WorkflowEngineSOA.assignActivityCompleted">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.ping(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.pingAsync(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.pingAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.createCasesAsString(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.createCasesAsStringAsync(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.createCasesAsStringAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.performActivityAsString(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.performActivityAsStringAsync(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.performActivityAsStringAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.setEventAsString(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.setEventAsStringAsync(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.setEventAsStringAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getCasesAsString(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getCasesAsStringAsync(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getCasesAsStringAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.saveActivityAsString(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.saveActivityAsStringAsync(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.saveActivityAsStringAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getActivitiesAsString(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getActivitiesAsStringAsync(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getActivitiesAsStringAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.suspendCasesAsString(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.suspendCasesAsStringAsync(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.suspendCasesAsStringAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.resumeCasesAsString(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.resumeCasesAsStringAsync(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.resumeCasesAsStringAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getClosedActivitiesAsString(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getClosedActivitiesAsStringAsync(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getClosedActivitiesAsStringAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getEventsAsString(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getEventsAsStringAsync(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getEventsAsStringAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getWorkflowClassesAsString(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getWorkflowClassesAsStringAsync(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getWorkflowClassesAsStringAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getCategoriesAsString(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getCategoriesAsStringAsync(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getCategoriesAsStringAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.abortCasesAsString(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.abortCasesAsStringAsync(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.abortCasesAsStringAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getAssignationLogAsString(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getAssignationLogAsStringAsync(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getAssignationLogAsStringAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.CheckPassword(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.CheckPasswordAsync(System.String,System.String,System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.CheckPasswordAsync(System.String,System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.assignActivityAsString(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.assignActivityAsStringAsync(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.assignActivityAsStringAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.grantCaseAccess(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.grantCaseAccessAsync(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.grantCaseAccessAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.revokeCaseAccess(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.revokeCaseAccessAsync(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.revokeCaseAccessAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.cleanTestData(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.cleanTestDataAsync(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.cleanTestDataAsync(System.Xml.XmlNode,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.createCases(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.createCasesAsync(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.createCasesAsync(System.Xml.XmlNode,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.evalRule(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.evalRuleAsync(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.evalRuleAsync(System.Xml.XmlNode,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getActivities(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getActivitiesAsync(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getActivitiesAsync(System.Xml.XmlNode,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getAssignationLog(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getAssignationLogAsync(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getAssignationLogAsync(System.Xml.XmlNode,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getClosedActivities(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getClosedActivitiesAsync(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getClosedActivitiesAsync(System.Xml.XmlNode,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.performActivity(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.performActivityAsync(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.performActivityAsync(System.Xml.XmlNode,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.resumeCases(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.resumeCasesAsync(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.resumeCasesAsync(System.Xml.XmlNode,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.rollbackCase(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.rollbackCaseAsync(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.rollbackCaseAsync(System.Xml.XmlNode,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.setEvent(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.setEventAsync(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.setEventAsync(System.Xml.XmlNode,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.suspendCases(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.suspendCasesAsync(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.suspendCasesAsync(System.Xml.XmlNode,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.abortCases(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.abortCasesAsync(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.abortCasesAsync(System.Xml.XmlNode,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getApplications">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getApplicationsAsync">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getApplicationsAsync(System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getCategories(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getCategoriesAsync(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getCategoriesAsync(System.Xml.XmlNode,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getCategories2(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getCategories2Async(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getCategories2Async(System.String,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getCategoriesFromApplicationName(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getCategoriesFromApplicationNameAsync(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getCategoriesFromApplicationNameAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getWorkflowClassesFromCategoryName(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getWorkflowClassesFromCategoryNameAsync(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getWorkflowClassesFromCategoryNameAsync(System.String,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getCategoriesLocalized(System.String,System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getCategoriesLocalizedAsync(System.String,System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getCategoriesLocalizedAsync(System.String,System.String,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getWorkflowClasses(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getWorkflowClassesAsync(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getWorkflowClassesAsync(System.Xml.XmlNode,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getWorkflowClasses2(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getWorkflowClasses2Async(System.String)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getWorkflowClasses2Async(System.String,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getEvents(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getEventsAsync(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getEventsAsync(System.Xml.XmlNode,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getCases(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getCasesAsync(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.getCasesAsync(System.Xml.XmlNode,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.saveActivity(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.saveActivityAsync(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.saveActivityAsync(System.Xml.XmlNode,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.assignActivity(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.assignActivityAsync(System.Xml.XmlNode)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.assignActivityAsync(System.Xml.XmlNode,System.Object)">
	<remarks/>
</member><member name="M:WebTaskVB.InsertService.WorkflowEngineSOA.CancelAsync(System.Object)">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.WorkflowEngineSOA">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.pingCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.pingCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.pingCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.createCasesAsStringCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.createCasesAsStringCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.createCasesAsStringCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.performActivityAsStringCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.performActivityAsStringCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.performActivityAsStringCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.setEventAsStringCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.setEventAsStringCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.setEventAsStringCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.getCasesAsStringCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.getCasesAsStringCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.getCasesAsStringCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.saveActivityAsStringCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.saveActivityAsStringCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.saveActivityAsStringCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.getActivitiesAsStringCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.getActivitiesAsStringCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.getActivitiesAsStringCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.suspendCasesAsStringCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.suspendCasesAsStringCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.suspendCasesAsStringCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.resumeCasesAsStringCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.resumeCasesAsStringCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.resumeCasesAsStringCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.getClosedActivitiesAsStringCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.getClosedActivitiesAsStringCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.getClosedActivitiesAsStringCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.getEventsAsStringCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.getEventsAsStringCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.getEventsAsStringCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.getWorkflowClassesAsStringCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.getWorkflowClassesAsStringCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.getWorkflowClassesAsStringCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.getCategoriesAsStringCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.getCategoriesAsStringCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.getCategoriesAsStringCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.abortCasesAsStringCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.abortCasesAsStringCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.abortCasesAsStringCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.getAssignationLogAsStringCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.getAssignationLogAsStringCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.getAssignationLogAsStringCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.CheckPasswordCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.CheckPasswordCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.CheckPasswordCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.assignActivityAsStringCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.assignActivityAsStringCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.assignActivityAsStringCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.grantCaseAccessCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.grantCaseAccessCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.grantCaseAccessCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.revokeCaseAccessCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.revokeCaseAccessCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.revokeCaseAccessCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.cleanTestDataCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.cleanTestDataCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.cleanTestDataCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.createCasesCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.createCasesCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.createCasesCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.evalRuleCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.evalRuleCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.evalRuleCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.getActivitiesCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.getActivitiesCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.getActivitiesCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.getAssignationLogCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.getAssignationLogCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.getAssignationLogCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.getClosedActivitiesCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.getClosedActivitiesCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.getClosedActivitiesCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.performActivityCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.performActivityCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.performActivityCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.resumeCasesCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.resumeCasesCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.resumeCasesCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.rollbackCaseCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.rollbackCaseCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.rollbackCaseCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.setEventCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.setEventCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.setEventCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.suspendCasesCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.suspendCasesCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.suspendCasesCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.abortCasesCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.abortCasesCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.abortCasesCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.getApplicationsCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.getApplicationsCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.getApplicationsCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.getCategoriesCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.getCategoriesCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.getCategoriesCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.getCategories2CompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.getCategories2CompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.getCategories2CompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.getCategoriesFromApplicationNameCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.getCategoriesFromApplicationNameCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.getCategoriesFromApplicationNameCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.getWorkflowClassesFromCategoryNameCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.getWorkflowClassesFromCategoryNameCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.getWorkflowClassesFromCategoryNameCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.getCategoriesLocalizedCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.getCategoriesLocalizedCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.getCategoriesLocalizedCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.getWorkflowClassesCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.getWorkflowClassesCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.getWorkflowClassesCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.getWorkflowClasses2CompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.getWorkflowClasses2CompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.getWorkflowClasses2CompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.getEventsCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.getEventsCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.getEventsCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.getCasesCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.getCasesCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.getCasesCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.saveActivityCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.saveActivityCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.saveActivityCompletedEventArgs">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.assignActivityCompletedEventHandler">
	<remarks/>
</member><member name="P:WebTaskVB.InsertService.assignActivityCompletedEventArgs.Result">
	<remarks/>
</member><member name="T:WebTaskVB.InsertService.assignActivityCompletedEventArgs">
	<remarks/>
</member><member name="P:WebTaskVB.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:WebTaskVB.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:WebTaskVB.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
</members>
</doc>